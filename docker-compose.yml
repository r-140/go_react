version: '3.6'
services:
    raccountservice-client:
        container_name: accountservice-client
        build:
            context: frontend/accountservice-client # Use an image built from the specified dockerfile in the `documents-app-client` directory.
            dockerfile: Dockerfile
        image: accountservice-client:latest
        ports:
        - "9090:80" # Forward the exposed port 80 on the container to port 80 on the host machine
        networks:
        - nw_go


    accountservice:
        container_name: accountservice
        build:
            context: bknd/accountservice
            dockerfile: Dockerfile
        image: accountservice:latest
        expose:
            - 9008
        ports:
            - "9008:9008"
        networks:
            - go
        logging:
            driver: json-file

    # postgresdb:
    #     container_name: postgresdb
    #     build:
    #         context: database/postgresdb
    #         dockerfile: Dockerfile
    #     image: postgresdb:latest
    #     ports:
    #         - "5432:5432"

    #     healthcheck:
    #         test: ["CMD-SHELL", "pg_isready -U postgres"]
    #         interval: 10s
    #         timeout: 5s
    #         retries: 5

    #     networks:
    #         - nw_go
    #     volumes:
    #         - pgdata_doc:/var/lib/postgresql
    #         - pgdoclogs:/var/log/postgresql
    #         - pgdocetc:/etc/postgresql

    mongodb:
        # image: mongo:latest
        container_name: mongodb
        build:
           context: database/mongodb
           dockerfile: Dockerfile
        image: mongodb:latest
        environment:
          - MONGO_DATA_DIR=/data/db
          - MONGO_LOG_DIR=/dev/null
#        volumes:
          - mongo_data:/data/db
        ports:
            - 27017:27017
        # command: mongod --smallfiles --logpath=/dev/null # --quiet
 

volumes:
    pgdata:
    pgdoclogs:
    pgdocetc:
    pgdata_doc:
networks:
    nw_go:
        driver: bridge
